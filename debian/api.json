{"Filepath":"doc/snippets/plugins/extrafiltersplugin.h","Functions":[{"Uniquefunname":"QImage filterImage(const QString \u0026 filter,const QImage \u0026 image,QWidget * parent)","Funname":"filterImage","Returntype":"QImage","Args":"const QString \u0026 filter,const QImage \u0026 image,QWidget * parent"}],"Records":[{"Name":"macro","Fields":["EXTRAFILTERSPLUGIN_H"]}]}
{"Filepath":"doc/snippets/plugins/interfaces.h","Functions":[{"Uniquefunname":"virtual QStringList brushes()","Funname":"brushes","Returntype":"virtual QStringList","Args":""},{"Uniquefunname":"virtual QImage filterImage(const QString \u0026 filter,const QImage \u0026 image,QWidget * parent)","Funname":"filterImage","Returntype":"virtual QImage","Args":"const QString \u0026 filter,const QImage \u0026 image,QWidget * parent"},{"Uniquefunname":"virtual QStringList filters()","Funname":"filters","Returntype":"virtual QStringList","Args":""},{"Uniquefunname":"virtual QPainterPath generateShape(const QString \u0026 shape,QWidget * parent)","Funname":"generateShape","Returntype":"virtual QPainterPath","Args":"const QString \u0026 shape,QWidget * parent"},{"Uniquefunname":"virtual QRect mouseMove(const QString \u0026 brush,QPainter \u0026 painter,const QPoint \u0026 oldPos,const QPoint \u0026 newPos)","Funname":"mouseMove","Returntype":"virtual QRect","Args":"const QString \u0026 brush,QPainter \u0026 painter,const QPoint \u0026 oldPos,const QPoint \u0026 newPos"},{"Uniquefunname":"virtual QRect mousePress(const QString \u0026 brush,QPainter \u0026 painter,const QPoint \u0026 pos)","Funname":"mousePress","Returntype":"virtual QRect","Args":"const QString \u0026 brush,QPainter \u0026 painter,const QPoint \u0026 pos"},{"Uniquefunname":"virtual QRect mouseRelease(const QString \u0026 brush,QPainter \u0026 painter,const QPoint \u0026 pos)","Funname":"mouseRelease","Returntype":"virtual QRect","Args":"const QString \u0026 brush,QPainter \u0026 painter,const QPoint \u0026 pos"},{"Uniquefunname":"virtual QStringList shapes()","Funname":"shapes","Returntype":"virtual QStringList","Args":""},{"Uniquefunname":"public ~BrushInterface()","Funname":"~BrushInterface","Returntype":"public","Args":""},{"Uniquefunname":"public ~FilterInterface()","Funname":"~FilterInterface","Returntype":"public","Args":""},{"Uniquefunname":"public ~ShapeInterface()","Funname":"~ShapeInterface","Returntype":"public","Args":""}],"Records":[{"Name":"macro","Fields":["BrushInterface_iid","FilterInterface_iid","INTERFACES_H","ShapeInterface_iid"]}]}
{"Filepath":"doc/src/snippets/animation/sequential/tracer.h","Functions":[{"Uniquefunname":"public slots checkValue()","Funname":"checkValue","Returntype":"public slots","Args":""},{"Uniquefunname":"void recordValue(const QVariant \u0026 value)","Funname":"recordValue","Returntype":"void","Args":"const QVariant \u0026 value"}],"Records":[{"Name":"macro","Fields":["TRACER_H"]}]}
{"Filepath":"doc/src/snippets/brushstyles/renderarea.h","Functions":[{"Uniquefunname":"QSize minimumSizeHint()","Funname":"minimumSizeHint","Returntype":"QSize","Args":""},{"Uniquefunname":"protected paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"protected","Args":"QPaintEvent * event"}],"Records":[{"Name":"macro","Fields":["RENDERAREA_H"]}]}
{"Filepath":"doc/src/snippets/brushstyles/stylewidget.h","Functions":null,"Records":[{"Name":"macro","Fields":["STYLEWIDGET_H"]}]}
{"Filepath":"doc/src/snippets/clipboard/clipwindow.h","Functions":[{"Uniquefunname":"public slots updateClipboard()","Funname":"updateClipboard","Returntype":"public slots","Args":""},{"Uniquefunname":"void updateData(const QString \u0026 format)","Funname":"updateData","Returntype":"void","Args":"const QString \u0026 format"}],"Records":[{"Name":"macro","Fields":["CLIPWINDOW_H"]}]}
{"Filepath":"doc/src/snippets/colors/window.h","Functions":[{"Uniquefunname":"protected closeEvent(QCloseEvent * event)","Funname":"closeEvent","Returntype":"protected","Args":"QCloseEvent * event"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"}],"Records":null}
{"Filepath":"doc/src/snippets/dockwidgets/mainwindow.h","Functions":[{"Uniquefunname":"private setupContents()","Funname":"setupContents","Returntype":"private","Args":""},{"Uniquefunname":"void setupDockWindow()","Funname":"setupDockWindow","Returntype":"void","Args":""},{"Uniquefunname":"void setupMenus()","Funname":"setupMenus","Returntype":"void","Args":""},{"Uniquefunname":"private slots updateText(QListWidgetItem * item)","Funname":"updateText","Returntype":"private slots","Args":"QListWidgetItem * item"}],"Records":[{"Name":"macro","Fields":["MAINWINDOW_H"]}]}
{"Filepath":"doc/src/snippets/draganddrop/dragwidget.h","Functions":[{"Uniquefunname":"Q_OBJECT public DragWidget(QWidget * parent)","Funname":"DragWidget","Returntype":"Q_OBJECT public","Args":"QWidget * parent"},{"Uniquefunname":"protected dragEnterEvent(QDragEnterEvent * event)","Funname":"dragEnterEvent","Returntype":"protected","Args":"QDragEnterEvent * event"},{"Uniquefunname":"signals dragResult(const QString \u0026 actionText)","Funname":"dragResult","Returntype":"signals","Args":"const QString \u0026 actionText"},{"Uniquefunname":"void dropEvent(QDropEvent * event)","Funname":"dropEvent","Returntype":"void","Args":"QDropEvent * event"},{"Uniquefunname":"void mimeTypes(const QStringList \u0026 types)","Funname":"mimeTypes","Returntype":"void","Args":"const QStringList \u0026 types"},{"Uniquefunname":"void mouseMoveEvent(QMouseEvent * event)","Funname":"mouseMoveEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void mousePressEvent(QMouseEvent * event)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"void setData(const QString \u0026 mimetype,const QByteArray \u0026 newData)","Funname":"setData","Returntype":"void","Args":"const QString \u0026 mimetype,const QByteArray \u0026 newData"}],"Records":[{"Name":"macro","Fields":["DRAGWIDGET_H"]}]}
{"Filepath":"doc/src/snippets/draganddrop/mainwindow.h","Functions":[{"Uniquefunname":"public slots setDragResult(const QString \u0026 actionText)","Funname":"setDragResult","Returntype":"public slots","Args":"const QString \u0026 actionText"},{"Uniquefunname":"void setMimeTypes(const QStringList \u0026 types)","Funname":"setMimeTypes","Returntype":"void","Args":"const QStringList \u0026 types"}],"Records":[{"Name":"macro","Fields":["MAINWINDOW_H"]}]}
{"Filepath":"doc/src/snippets/dragging/mainwindow.h","Functions":[{"Uniquefunname":"protected mousePressEvent(QMouseEvent * event)","Funname":"mousePressEvent","Returntype":"protected","Args":"QMouseEvent * event"}],"Records":[{"Name":"macro","Fields":["MAINWINDOW_H"]}]}
{"Filepath":"doc/src/snippets/dropactions/window.h","Functions":[{"Uniquefunname":"protected dragEnterEvent(QDragEnterEvent * event)","Funname":"dragEnterEvent","Returntype":"protected","Args":"QDragEnterEvent * event"},{"Uniquefunname":"void dropEvent(QDropEvent * event)","Funname":"dropEvent","Returntype":"void","Args":"QDropEvent * event"}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/dropevents/window.h","Functions":[{"Uniquefunname":"protected dragEnterEvent(QDragEnterEvent * event)","Funname":"dragEnterEvent","Returntype":"protected","Args":"QDragEnterEvent * event"},{"Uniquefunname":"void dropEvent(QDropEvent * event)","Funname":"dropEvent","Returntype":"void","Args":"QDropEvent * event"}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/droprectangle/window.h","Functions":[{"Uniquefunname":"protected dragMoveEvent(QDragMoveEvent * event)","Funname":"dragMoveEvent","Returntype":"protected","Args":"QDragMoveEvent * event"},{"Uniquefunname":"void dropEvent(QDropEvent * event)","Funname":"dropEvent","Returntype":"void","Args":"QDropEvent * event"}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/explicitlysharedemployee/employee.h","Functions":[{"Uniquefunname":"public Employee()","Funname":"Employee","Returntype":"public","Args":""},{"Uniquefunname":" Employee(int id,const QString \u0026 name)","Funname":"Employee","Returntype":"","Args":"int id,const QString \u0026 name"},{"Uniquefunname":"public EmployeeData()","Funname":"EmployeeData","Returntype":"public","Args":""},{"Uniquefunname":" EmployeeData(const EmployeeData \u0026 other)","Funname":"EmployeeData","Returntype":"","Args":"const EmployeeData \u0026 other"},{"Uniquefunname":"int id()","Funname":"id","Returntype":"int","Args":""},{"Uniquefunname":"QString name()","Funname":"name","Returntype":"QString","Args":""},{"Uniquefunname":"void setId(int id)","Funname":"setId","Returntype":"void","Args":"int id"},{"Uniquefunname":"void setName(const QString \u0026 name)","Funname":"setName","Returntype":"void","Args":"const QString \u0026 name"},{"Uniquefunname":" ~EmployeeData()","Funname":"~EmployeeData","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["EMPLOYEE_H"]}]}
{"Filepath":"doc/src/snippets/i18n-non-qt-class/myclass.h","Functions":[{"Uniquefunname":"    Q_DECLARE_TR_FUNCTIONS(MyClass)","Funname":"Q_DECLARE_TR_FUNCTIONS","Returntype":"","Args":"MyClass"}],"Records":[{"Name":"macro","Fields":["MYCLASS_H"]}]}
{"Filepath":"doc/src/snippets/inherited-slot/button.h","Functions":[{"Uniquefunname":"public slots animateClick()","Funname":"animateClick","Returntype":"public slots","Args":""}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/moc/myclass1.h","Functions":[{"Uniquefunname":"signals mySignal()","Funname":"mySignal","Returntype":"signals","Args":""},{"Uniquefunname":"public slots mySlot()","Funname":"mySlot","Returntype":"public slots","Args":""},{"Uniquefunname":" ~MyClass()","Funname":"~MyClass","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["MYCLASS1_H","MyClass"]}]}
{"Filepath":"doc/src/snippets/moc/myclass2.h","Functions":[{"Uniquefunname":"Priority priority()","Funname":"priority","Returntype":"Priority","Args":""},{"Uniquefunname":"void setPriority(Priority priority)","Funname":"setPriority","Returntype":"void","Args":"Priority priority"},{"Uniquefunname":" ~MyClass()","Funname":"~MyClass","Returntype":"","Args":""}],"Records":[{"Name":"enum:Priority","Fields":["High","Low","VeryHigh","VeryLow"]},{"Name":"macro","Fields":["MYCLASS2_H","MyClass"]}]}
{"Filepath":"doc/src/snippets/moc/myclass3.h","Functions":[{"Uniquefunname":" ~MyClass()","Funname":"~MyClass","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["MYCLASS3_H"]}]}
{"Filepath":"doc/src/snippets/modelview-subclasses/model.h","Functions":[{"Uniquefunname":"QVariant data(const QModelIndex \u0026 index,int role)","Funname":"data","Returntype":"QVariant","Args":"const QModelIndex \u0026 index,int role"},{"Uniquefunname":"Qt flags(const QModelIndex \u0026 index)","Funname":"flags","Returntype":"Qt","Args":"const QModelIndex \u0026 index"}],"Records":[{"Name":"macro","Fields":["MODEL_H"]}]}
{"Filepath":"doc/src/snippets/modelview-subclasses/view.h","Functions":[{"Uniquefunname":"void ensureVisible(const QModelIndex \u0026 index)","Funname":"ensureVisible","Returntype":"void","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"int horizontalOffset()","Funname":"horizontalOffset","Returntype":"int","Args":""},{"Uniquefunname":"bool isIndexHidden(const QModelIndex \u0026 index)","Funname":"isIndexHidden","Returntype":"bool","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"QModelIndex itemAt(int x,int y)","Funname":"itemAt","Returntype":"QModelIndex","Args":"int x,int y"},{"Uniquefunname":"QRect itemRect(const QModelIndex \u0026 item)","Funname":"itemRect","Returntype":"QRect","Args":"const QModelIndex \u0026 item"},{"Uniquefunname":"QRect itemViewportRect(const QModelIndex \u0026 index)","Funname":"itemViewportRect","Returntype":"QRect","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"QModelIndex moveCursor(QAbstractItemView::CursorAction cursorAction,Qt::KeyboardModifiers modifiers)","Funname":"moveCursor","Returntype":"QModelIndex","Args":"QAbstractItemView::CursorAction cursorAction,Qt::KeyboardModifiers modifiers"},{"Uniquefunname":"void paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"void","Args":"QPaintEvent * event"},{"Uniquefunname":"void resizeEvent(QResizeEvent * event)","Funname":"resizeEvent","Returntype":"void","Args":"QResizeEvent * event"},{"Uniquefunname":"protected slots rowsInserted(const QModelIndex \u0026 parent,int start,int end)","Funname":"rowsInserted","Returntype":"protected slots","Args":"const QModelIndex \u0026 parent,int start,int end"},{"Uniquefunname":"void rowsRemoved(const QModelIndex \u0026 parent,int start,int end)","Funname":"rowsRemoved","Returntype":"void","Args":"const QModelIndex \u0026 parent,int start,int end"},{"Uniquefunname":"QRect selectionViewportRect(const QItemSelection \u0026 selection)","Funname":"selectionViewportRect","Returntype":"QRect","Args":"const QItemSelection \u0026 selection"},{"Uniquefunname":"protected setSelection(const QRect \u0026,QItemSelectionModel::SelectionFlags command)","Funname":"setSelection","Returntype":"protected","Args":"const QRect \u0026,QItemSelectionModel::SelectionFlags command"},{"Uniquefunname":"QSize sizeHint()","Funname":"sizeHint","Returntype":"QSize","Args":""},{"Uniquefunname":"void updateGeometries()","Funname":"updateGeometries","Returntype":"void","Args":""},{"Uniquefunname":"int verticalOffset()","Funname":"verticalOffset","Returntype":"int","Args":""}],"Records":[{"Name":"macro","Fields":["VIEW_H"]}]}
{"Filepath":"doc/src/snippets/modelview-subclasses/window.h","Functions":[{"Uniquefunname":"void openFile(const QString \u0026 fileName)","Funname":"openFile","Returntype":"void","Args":"const QString \u0026 fileName"},{"Uniquefunname":"public slots selectOpenFile()","Funname":"selectOpenFile","Returntype":"public slots","Args":""},{"Uniquefunname":"private setupModelView()","Funname":"setupModelView","Returntype":"private","Args":""}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/persistentindexes/mainwindow.h","Functions":[{"Uniquefunname":"private slots insertItem()","Funname":"insertItem","Returntype":"private slots","Args":""},{"Uniquefunname":"void removeItem()","Funname":"removeItem","Returntype":"void","Args":""},{"Uniquefunname":"void updateMenus(const QModelIndex \u0026 currentIndex)","Funname":"updateMenus","Returntype":"void","Args":"const QModelIndex \u0026 currentIndex"}],"Records":[{"Name":"macro","Fields":["MAINWINDOW_H"]}]}
{"Filepath":"doc/src/snippets/persistentindexes/model.h","Functions":[{"Uniquefunname":"QVariant data(const QModelIndex \u0026 index,int role)","Funname":"data","Returntype":"QVariant","Args":"const QModelIndex \u0026 index,int role"},{"Uniquefunname":"Qt flags(const QModelIndex \u0026 index)","Funname":"flags","Returntype":"Qt","Args":"const QModelIndex \u0026 index"}],"Records":[{"Name":"macro","Fields":["MODEL_H"]}]}
{"Filepath":"doc/src/snippets/porting4-dropevents/window.h","Functions":[{"Uniquefunname":"protected dragEnterEvent(QDragEnterEvent * event)","Funname":"dragEnterEvent","Returntype":"protected","Args":"QDragEnterEvent * event"},{"Uniquefunname":"void dropEvent(QDropEvent * event)","Funname":"dropEvent","Returntype":"void","Args":"QDropEvent * event"},{"Uniquefunname":"void mousePressEvent(QMouseEvent * event)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/printing-qprinter/object.h","Functions":[{"Uniquefunname":"public slots print()","Funname":"print","Returntype":"public slots","Args":""}],"Records":null}
{"Filepath":"doc/src/snippets/qlineargradient/paintwidget.h","Functions":[{"Uniquefunname":"protected paintEvent(QPaintEvent * event)","Funname":"paintEvent","Returntype":"protected","Args":"QPaintEvent * event"}],"Records":[{"Name":"macro","Fields":["PAINTWIDGET_H"]}]}
{"Filepath":"doc/src/snippets/qlistview-using/mainwindow.h","Functions":[{"Uniquefunname":"Q_OBJECT public MainWindow()","Funname":"MainWindow","Returntype":"Q_OBJECT public","Args":""},{"Uniquefunname":"public slots insertItem()","Funname":"insertItem","Returntype":"public slots","Args":""},{"Uniquefunname":"void removeItem()","Funname":"removeItem","Returntype":"void","Args":""},{"Uniquefunname":"void sortAscending()","Funname":"sortAscending","Returntype":"void","Args":""},{"Uniquefunname":"void sortDescending()","Funname":"sortDescending","Returntype":"void","Args":""},{"Uniquefunname":"void updateMenus(const QModelIndex \u0026 current)","Funname":"updateMenus","Returntype":"void","Args":"const QModelIndex \u0026 current"}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/qlistview-using/model.h","Functions":[{"Uniquefunname":"QVariant data(const QModelIndex \u0026 index,int role)","Funname":"data","Returntype":"QVariant","Args":"const QModelIndex \u0026 index,int role"},{"Uniquefunname":"Qt flags(const QModelIndex \u0026 index)","Funname":"flags","Returntype":"Qt","Args":"const QModelIndex \u0026 index"}],"Records":[{"Name":"macro","Fields":["MODEL_H"]}]}
{"Filepath":"doc/src/snippets/qlistwidget-using/mainwindow.h","Functions":[{"Uniquefunname":"Q_OBJECT public MainWindow()","Funname":"MainWindow","Returntype":"Q_OBJECT public","Args":""},{"Uniquefunname":"public slots insertItem()","Funname":"insertItem","Returntype":"public slots","Args":""},{"Uniquefunname":"void removeItem()","Funname":"removeItem","Returntype":"void","Args":""},{"Uniquefunname":"private setupListItems()","Funname":"setupListItems","Returntype":"private","Args":""},{"Uniquefunname":"void sortAscending()","Funname":"sortAscending","Returntype":"void","Args":""},{"Uniquefunname":"void sortDescending()","Funname":"sortDescending","Returntype":"void","Args":""},{"Uniquefunname":"void updateMenus(QListWidgetItem * current)","Funname":"updateMenus","Returntype":"void","Args":"QListWidgetItem * current"}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/qsignalmapper/mainwindow.h","Functions":[{"Uniquefunname":"    MainWindow()","Funname":"MainWindow","Returntype":"Q_OBJECT public","Args":""},{"Uniquefunname":"    void buttonPressed(const QString \u0026text)","Funname":"buttonPressed","Returntype":"public slots","Args":"const QString \u0026 text"}],"Records":null}
{"Filepath":"doc/src/snippets/qsplashscreen/mainwindow.h","Functions":[{"Uniquefunname":"Q_OBJECT public MainWindow()","Funname":"MainWindow","Returntype":"Q_OBJECT public","Args":""}],"Records":[{"Name":"macro","Fields":["MAINWINDOW_H"]}]}
{"Filepath":"doc/src/snippets/qtablewidget-dnd/mainwindow.h","Functions":[{"Uniquefunname":"Q_OBJECT public MainWindow()","Funname":"MainWindow","Returntype":"Q_OBJECT public","Args":""},{"Uniquefunname":"public slots averageItems()","Funname":"averageItems","Returntype":"public slots","Args":""},{"Uniquefunname":"private setupTableItems()","Funname":"setupTableItems","Returntype":"private","Args":""},{"Uniquefunname":"void sumItems()","Funname":"sumItems","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/qtablewidget-resizing/mainwindow.h","Functions":[{"Uniquefunname":"Q_OBJECT public MainWindow()","Funname":"MainWindow","Returntype":"Q_OBJECT public","Args":""},{"Uniquefunname":"public slots changeHeight()","Funname":"changeHeight","Returntype":"public slots","Args":""},{"Uniquefunname":"void changeWidth()","Funname":"changeWidth","Returntype":"void","Args":""},{"Uniquefunname":"private setupTableItems()","Funname":"setupTableItems","Returntype":"private","Args":""}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/qtcast/qtcast.h","Functions":[{"Uniquefunname":"Q_OBJECT public MyWidget()","Funname":"MyWidget","Returntype":"Q_OBJECT public","Args":""}],"Records":[{"Name":"macro","Fields":["QTCAST_H"]}]}
{"Filepath":"doc/src/snippets/qtreeview-dnd/dragdropmodel.h","Functions":[{"Uniquefunname":"bool dropMimeData(const QMimeData * data,Qt::DropAction action,int row,int column,const QModelIndex \u0026 parent)","Funname":"dropMimeData","Returntype":"bool","Args":"const QMimeData * data,Qt::DropAction action,int row,int column,const QModelIndex \u0026 parent"},{"Uniquefunname":"Qt flags(const QModelIndex \u0026 index)","Funname":"flags","Returntype":"Qt","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"QMimeData * mimeData(const QModelIndexList \u0026 indexes)","Funname":"mimeData","Returntype":"QMimeData *","Args":"const QModelIndexList \u0026 indexes"},{"Uniquefunname":"QStringList mimeTypes()","Funname":"mimeTypes","Returntype":"QStringList","Args":""},{"Uniquefunname":"Qt supportedDropActions()","Funname":"supportedDropActions","Returntype":"Qt","Args":""}],"Records":[{"Name":"macro","Fields":["DRAGDROPMODEL_H"]}]}
{"Filepath":"doc/src/snippets/qtreeview-dnd/mainwindow.h","Functions":[{"Uniquefunname":"Q_OBJECT public MainWindow()","Funname":"MainWindow","Returntype":"Q_OBJECT public","Args":""},{"Uniquefunname":"private setupItems()","Funname":"setupItems","Returntype":"private","Args":""}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/qtreeview-dnd/treeitem.h","Functions":[{"Uniquefunname":"void appendChild(TreeItem * child)","Funname":"appendChild","Returntype":"void","Args":"TreeItem * child"},{"Uniquefunname":"TreeItem * child(int row)","Funname":"child","Returntype":"TreeItem *","Args":"int row"},{"Uniquefunname":"int childCount()","Funname":"childCount","Returntype":"int","Args":""},{"Uniquefunname":"int columnCount()","Funname":"columnCount","Returntype":"int","Args":""},{"Uniquefunname":"QVariant data(int column)","Funname":"data","Returntype":"QVariant","Args":"int column"},{"Uniquefunname":"bool insertChild(int row,TreeItem * item)","Funname":"insertChild","Returntype":"bool","Args":"int row,TreeItem * item"},{"Uniquefunname":"TreeItem * parent()","Funname":"parent","Returntype":"TreeItem *","Args":""},{"Uniquefunname":"bool removeChild(int row)","Funname":"removeChild","Returntype":"bool","Args":"int row"},{"Uniquefunname":"int row()","Funname":"row","Returntype":"int","Args":""},{"Uniquefunname":"bool setData(int column,const QVariant \u0026 data)","Funname":"setData","Returntype":"bool","Args":"int column,const QVariant \u0026 data"},{"Uniquefunname":" ~TreeItem()","Funname":"~TreeItem","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["TREEITEM_H"]}]}
{"Filepath":"doc/src/snippets/qtreeview-dnd/treemodel.h","Functions":[{"Uniquefunname":"QVariant data(const QModelIndex \u0026 index,int role)","Funname":"data","Returntype":"QVariant","Args":"const QModelIndex \u0026 index,int role"},{"Uniquefunname":"Qt flags(const QModelIndex \u0026 index)","Funname":"flags","Returntype":"Qt","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"QModelIndex parent(const QModelIndex \u0026 index)","Funname":"parent","Returntype":"QModelIndex","Args":"const QModelIndex \u0026 index"},{"Uniquefunname":"private setupModelData(const QStringList \u0026 lines,TreeItem * parent)","Funname":"setupModelData","Returntype":"private","Args":"const QStringList \u0026 lines,TreeItem * parent"},{"Uniquefunname":" ~TreeModel()","Funname":"~TreeModel","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["TREEMODEL_H"]}]}
{"Filepath":"doc/src/snippets/qtreewidget-using/mainwindow.h","Functions":[{"Uniquefunname":"Q_OBJECT public MainWindow()","Funname":"MainWindow","Returntype":"Q_OBJECT public","Args":""},{"Uniquefunname":"public slots findItems()","Funname":"findItems","Returntype":"public slots","Args":""},{"Uniquefunname":"void insertItem()","Funname":"insertItem","Returntype":"void","Args":""},{"Uniquefunname":"void removeItem()","Funname":"removeItem","Returntype":"void","Args":""},{"Uniquefunname":"private setupTreeItems()","Funname":"setupTreeItems","Returntype":"private","Args":""},{"Uniquefunname":"void sortAscending()","Funname":"sortAscending","Returntype":"void","Args":""},{"Uniquefunname":"void sortDescending()","Funname":"sortDescending","Returntype":"void","Args":""},{"Uniquefunname":"void updateMenus(QTreeWidgetItem * current)","Funname":"updateMenus","Returntype":"void","Args":"QTreeWidgetItem * current"},{"Uniquefunname":"void updateSortItems()","Funname":"updateSortItems","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/qtreewidgetitemiterator-using/mainwindow.h","Functions":[{"Uniquefunname":"Q_OBJECT public MainWindow()","Funname":"MainWindow","Returntype":"Q_OBJECT public","Args":""},{"Uniquefunname":"public slots findItems()","Funname":"findItems","Returntype":"public slots","Args":""},{"Uniquefunname":"void insertItem()","Funname":"insertItem","Returntype":"void","Args":""},{"Uniquefunname":"void removeItem()","Funname":"removeItem","Returntype":"void","Args":""},{"Uniquefunname":"private setupTreeItems()","Funname":"setupTreeItems","Returntype":"private","Args":""},{"Uniquefunname":"void sortAscending()","Funname":"sortAscending","Returntype":"void","Args":""},{"Uniquefunname":"void sortDescending()","Funname":"sortDescending","Returntype":"void","Args":""},{"Uniquefunname":"void updateMenus(QTreeWidgetItem * current)","Funname":"updateMenus","Returntype":"void","Args":"QTreeWidgetItem * current"},{"Uniquefunname":"void updateSortItems()","Funname":"updateSortItems","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/qtscript/registeringobjects/myobject.h","Functions":[{"Uniquefunname":"Q_OBJECT public MyObject()","Funname":"MyObject","Returntype":"Q_OBJECT public","Args":""},{"Uniquefunname":"public slots calculate(int value)","Funname":"calculate","Returntype":"public slots","Args":"int value"}],"Records":[{"Name":"macro","Fields":["MYOBJECT_H"]}]}
{"Filepath":"doc/src/snippets/separations/finalwidget.h","Functions":[{"Uniquefunname":"Q_OBJECT public FinalWidget(QWidget * parent,const QString \u0026 name,const QSize \u0026 labelSize)","Funname":"FinalWidget","Returntype":"Q_OBJECT public","Args":"QWidget * parent,const QString \u0026 name,const QSize \u0026 labelSize"},{"Uniquefunname":"private createImage()","Funname":"createImage","Returntype":"private","Args":""},{"Uniquefunname":"protected mouseMoveEvent(QMouseEvent * event)","Funname":"mouseMoveEvent","Returntype":"protected","Args":"QMouseEvent * event"},{"Uniquefunname":"void mousePressEvent(QMouseEvent * event)","Funname":"mousePressEvent","Returntype":"void","Args":"QMouseEvent * event"},{"Uniquefunname":"const QPixmap * pixmap()","Funname":"pixmap","Returntype":"const QPixmap *","Args":""},{"Uniquefunname":"void setPixmap(const QPixmap \u0026 pixmap)","Funname":"setPixmap","Returntype":"void","Args":"const QPixmap \u0026 pixmap"}],"Records":[{"Name":"macro","Fields":["FINALWIDGET_H"]}]}
{"Filepath":"doc/src/snippets/separations/screenwidget.h","Functions":[{"Uniquefunname":" ScreenWidget(QWidget * parent,QColor initialColor,const QString \u0026 name,Separation mask,const QSize \u0026 labelSize)","Funname":"ScreenWidget","Returntype":"","Args":"QWidget * parent,QColor initialColor,const QString \u0026 name,Separation mask,const QSize \u0026 labelSize"},{"Uniquefunname":"private createImage()","Funname":"createImage","Returntype":"private","Args":""},{"Uniquefunname":"QImage * image()","Funname":"image","Returntype":"QImage *","Args":""},{"Uniquefunname":"signals imageChanged()","Funname":"imageChanged","Returntype":"signals","Args":""},{"Uniquefunname":"void invertImage()","Funname":"invertImage","Returntype":"void","Args":""},{"Uniquefunname":"public slots setColor()","Funname":"setColor","Returntype":"public slots","Args":""},{"Uniquefunname":"void setImage(QImage \u0026 image)","Funname":"setImage","Returntype":"void","Args":"QImage \u0026 image"}],"Records":[{"Name":"enum:Separation","Fields":["Cyan","Magenta","Yellow"]},{"Name":"macro","Fields":["SCREENWIDGET_H"]}]}
{"Filepath":"doc/src/snippets/separations/viewer.h","Functions":[{"Uniquefunname":" Viewer()","Funname":"Viewer","Returntype":"","Args":""},{"Uniquefunname":"public slots chooseFile()","Funname":"chooseFile","Returntype":"public slots","Args":""},{"Uniquefunname":"QFrame * createCentralWidget()","Funname":"createCentralWidget","Returntype":"QFrame *","Args":""},{"Uniquefunname":"void createImage()","Funname":"createImage","Returntype":"void","Args":""},{"Uniquefunname":"private createMenus()","Funname":"createMenus","Returntype":"private","Args":""},{"Uniquefunname":"void openImageFile(QString \u0026 filePath)","Funname":"openImageFile","Returntype":"void","Args":"QString \u0026 filePath"},{"Uniquefunname":"void saveImage()","Funname":"saveImage","Returntype":"void","Args":""},{"Uniquefunname":"void setBrightness(QAction * action)","Funname":"setBrightness","Returntype":"void","Args":"QAction * action"}],"Records":[{"Name":"enum:Brightness","Fields":["Full","Half","None","Quarter","ThreeQuarters"]},{"Name":"macro","Fields":["VIEWER_H"]}]}
{"Filepath":"doc/src/snippets/signalmapper/filereader.h","Functions":[{"Uniquefunname":"public slots readFile(const QString \u0026)","Funname":"readFile","Returntype":"public slots","Args":"const QString \u0026"},{"Uniquefunname":"void readFromFile(QString filename)","Funname":"readFromFile","Returntype":"void","Args":"QString filename"}],"Records":[{"Name":"macro","Fields":["FILEREADER_H"]}]}
{"Filepath":"doc/src/snippets/signalsandslots/signalslotsyntaxes.h","Functions":[{"Uniquefunname":"signals cppSignal(const QVariant \u0026 sentMsg)","Funname":"cppSignal","Returntype":"signals","Args":"const QVariant \u0026 sentMsg"},{"Uniquefunname":"public slots cppSlot(const QString \u0026 receivedMsg)","Funname":"cppSlot","Returntype":"public slots","Args":"const QString \u0026 receivedMsg"},{"Uniquefunname":"void demoCrossLanguageConnect()","Funname":"demoCrossLanguageConnect","Returntype":"void","Args":""},{"Uniquefunname":"void demoImplicitConversion()","Funname":"demoImplicitConversion","Returntype":"void","Args":""},{"Uniquefunname":"void demoOverloadConnect()","Funname":"demoOverloadConnect","Returntype":"void","Args":""},{"Uniquefunname":"void demoTypeResolution()","Funname":"demoTypeResolution","Returntype":"void","Args":""},{"Uniquefunname":"signals textCompleted(const QString \u0026 text)","Funname":"textCompleted","Returntype":"signals","Args":"const QString \u0026 text"}],"Records":null}
{"Filepath":"doc/src/snippets/webkit/imageanalyzer/imageanalyzer.h","Functions":[{"Uniquefunname":" Q_PROPERTY(bool busy READ isBusy)","Funname":"Q_PROPERTY","Returntype":"","Args":"bool busy READ isBusy"},{"Uniquefunname":" Q_PROPERTY(float blue READ lastBlue)","Funname":"Q_PROPERTY","Returntype":"","Args":"float blue READ lastBlue"},{"Uniquefunname":" Q_PROPERTY(float green READ lastGreen)","Funname":"Q_PROPERTY","Returntype":"","Args":"float green READ lastGreen"},{"Uniquefunname":" Q_PROPERTY(float red READ lastRed)","Funname":"Q_PROPERTY","Returntype":"","Args":"float red READ lastRed"},{"Uniquefunname":"QRgb averageRGB(const QImage \u0026 img)","Funname":"averageRGB","Returntype":"QRgb","Args":"const QImage \u0026 img"},{"Uniquefunname":"void doneProcessing()","Funname":"doneProcessing","Returntype":"void","Args":""},{"Uniquefunname":"void fetchURLs()","Funname":"fetchURLs","Returntype":"void","Args":""},{"Uniquefunname":"signals finishedAnalysis()","Funname":"finishedAnalysis","Returntype":"signals","Args":""},{"Uniquefunname":"private slots handleReply(QNetworkReply *)","Funname":"handleReply","Returntype":"private slots","Args":"QNetworkReply *"},{"Uniquefunname":"bool isBusy()","Funname":"isBusy","Returntype":"bool","Args":""},{"Uniquefunname":"float lastBlue()","Funname":"lastBlue","Returntype":"float","Args":""},{"Uniquefunname":"float lastGreen()","Funname":"lastGreen","Returntype":"float","Args":""},{"Uniquefunname":"float lastRed()","Funname":"lastRed","Returntype":"float","Args":""},{"Uniquefunname":"QRgb lastResults()","Funname":"lastResults","Returntype":"QRgb","Args":""},{"Uniquefunname":"private processImages()","Funname":"processImages","Returntype":"private","Args":""},{"Uniquefunname":"void progressStatus(int)","Funname":"progressStatus","Returntype":"void","Args":"int"},{"Uniquefunname":"void queueImage(QImage img)","Funname":"queueImage","Returntype":"void","Args":"QImage img"},{"Uniquefunname":"public slots startAnalysis(const QStringList \u0026 urls)","Funname":"startAnalysis","Returntype":"public slots","Args":"const QStringList \u0026 urls"},{"Uniquefunname":"void updateProgress(int completed,int total)","Funname":"updateProgress","Returntype":"void","Args":"int completed,int total"},{"Uniquefunname":" ~ImageAnalyzer()","Funname":"~ImageAnalyzer","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["IMAGEANALYZER_H"]}]}
{"Filepath":"doc/src/snippets/webkit/simpleselector/window.h","Functions":[{"Uniquefunname":"public slots on_elementLineEdit_returnPressed()","Funname":"on_elementLineEdit_returnPressed","Returntype":"public slots","Args":""},{"Uniquefunname":"void on_highlightButton_clicked()","Funname":"on_highlightButton_clicked","Returntype":"void","Args":""},{"Uniquefunname":"void setUrl(const QUrl \u0026 url)","Funname":"setUrl","Returntype":"void","Args":"const QUrl \u0026 url"}],"Records":[{"Name":"macro","Fields":["WINDOW_H"]}]}
{"Filepath":"doc/src/snippets/widgets-tutorial/notepad/notepad.h","Functions":[{"Uniquefunname":"void on_actionCopy_triggered()","Funname":"on_actionCopy_triggered","Returntype":"void","Args":""},{"Uniquefunname":"void on_actionCut_triggered()","Funname":"on_actionCut_triggered","Returntype":"void","Args":""},{"Uniquefunname":"void on_actionExit_triggered()","Funname":"on_actionExit_triggered","Returntype":"void","Args":""},{"Uniquefunname":"void on_actionFont_triggered()","Funname":"on_actionFont_triggered","Returntype":"void","Args":""},{"Uniquefunname":"private slots on_actionNew_triggered()","Funname":"on_actionNew_triggered","Returntype":"private slots","Args":""},{"Uniquefunname":"void on_actionOpen_triggered()","Funname":"on_actionOpen_triggered","Returntype":"void","Args":""},{"Uniquefunname":"void on_actionPaste_triggered()","Funname":"on_actionPaste_triggered","Returntype":"void","Args":""},{"Uniquefunname":"void on_actionPrint_triggered()","Funname":"on_actionPrint_triggered","Returntype":"void","Args":""},{"Uniquefunname":"void on_actionRedo_triggered()","Funname":"on_actionRedo_triggered","Returntype":"void","Args":""},{"Uniquefunname":"void on_actionSave_as_triggered()","Funname":"on_actionSave_as_triggered","Returntype":"void","Args":""},{"Uniquefunname":"void on_actionSave_triggered()","Funname":"on_actionSave_triggered","Returntype":"void","Args":""},{"Uniquefunname":"void on_actionUndo_triggered()","Funname":"on_actionUndo_triggered","Returntype":"void","Args":""},{"Uniquefunname":" ~Notepad()","Funname":"~Notepad","Returntype":"","Args":""}],"Records":[{"Name":"macro","Fields":["NOTEPAD_H"]}]}
{"Filepath":"doc/src/snippets/xml/rsslisting/handler.h","Functions":[{"Uniquefunname":"bool characters(const QString \u0026 chars)","Funname":"characters","Returntype":"bool","Args":"const QString \u0026 chars"},{"Uniquefunname":"bool endElement(const QString \u0026,const QString \u0026,const QString \u0026 qName)","Funname":"endElement","Returntype":"bool","Args":"const QString \u0026,const QString \u0026,const QString \u0026 qName"},{"Uniquefunname":"bool fatalError(const QXmlParseException \u0026 exception)","Funname":"fatalError","Returntype":"bool","Args":"const QXmlParseException \u0026 exception"},{"Uniquefunname":"signals newItem(QString \u0026 title,QString \u0026 link)","Funname":"newItem","Returntype":"signals","Args":"QString \u0026 title,QString \u0026 link"},{"Uniquefunname":"Q_OBJECT public startDocument()","Funname":"startDocument","Returntype":"Q_OBJECT public","Args":""},{"Uniquefunname":"bool startElement(const QString \u0026,const QString \u0026,const QString \u0026 qName,const QXmlAttributes \u0026 attr)","Funname":"startElement","Returntype":"bool","Args":"const QString \u0026,const QString \u0026,const QString \u0026 qName,const QXmlAttributes \u0026 attr"}],"Records":[{"Name":"macro","Fields":["HANDLER_H"]}]}
{"Filepath":"doc/src/snippets/xml/rsslisting/rsslisting.h","Functions":[{"Uniquefunname":"public slots addItem(QString \u0026 title,QString \u0026 link)","Funname":"addItem","Returntype":"public slots","Args":"QString \u0026 title,QString \u0026 link"},{"Uniquefunname":"void fetch()","Funname":"fetch","Returntype":"void","Args":""},{"Uniquefunname":"void finished(QNetworkReply * reply)","Funname":"finished","Returntype":"void","Args":"QNetworkReply * reply"},{"Uniquefunname":"void readData()","Funname":"readData","Returntype":"void","Args":""}],"Records":[{"Name":"macro","Fields":["RSSLISTING_H"]}]}
{"Filepath":"doc/src/snippets/xml/simpleparse/handler.h","Functions":[{"Uniquefunname":"bool endElement(const QString \u0026,const QString \u0026,const QString \u0026)","Funname":"endElement","Returntype":"bool","Args":"const QString \u0026,const QString \u0026,const QString \u0026"},{"Uniquefunname":"bool fatalError(const QXmlParseException \u0026 exception)","Funname":"fatalError","Returntype":"bool","Args":"const QXmlParseException \u0026 exception"},{"Uniquefunname":"QList\u003cint\u003e \u0026 indentations()","Funname":"indentations","Returntype":"QList\u003cint\u003e \u0026","Args":""},{"Uniquefunname":"QStringList \u0026 names()","Funname":"names","Returntype":"QStringList \u0026","Args":""},{"Uniquefunname":"public startDocument()","Funname":"startDocument","Returntype":"public","Args":""},{"Uniquefunname":"bool startElement(const QString \u0026,const QString \u0026,const QString \u0026 qName,const QXmlAttributes \u0026)","Funname":"startElement","Returntype":"bool","Args":"const QString \u0026,const QString \u0026,const QString \u0026 qName,const QXmlAttributes \u0026"}],"Records":[{"Name":"macro","Fields":["HANDLER_H"]}]}
